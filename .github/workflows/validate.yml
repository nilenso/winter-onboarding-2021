name: Validate pull requests

on:
  pull_request:
    branches: [ main ]

jobs:
  lint:
    name: Lint Code Base
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Lint Code Base
        uses: DeLaGuardo/clojure-lint-action@master
        with:
          clj-kondo-args: --lint src
          check-name: Linting errors and warnings
          github_token: ${{ secrets.GITHUB_TOKEN }}

  cljfmt:
    name: Check codebase formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: bltavares/actions/cljfmt@1.0.8
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: autofix src test extra-src-path

  deps:
    name: Install dependencies
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Cache lein dependencies
      uses: actions/cache@v2
      env:
        cache-name: lein-dependencies
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('project.clj') }}
        restore-keys: ${{ runner.os }}-${{ env.cache-name }}

    - name: Install Dependencies
      run: lein deps

  test:
    name: Run tests
    runs-on: ubuntu-latest
    needs: deps
    env:
      ENV: test
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: fleet_management_test
    services:
      postgres:
        env:
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
        image: postgres:14.1
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v2

    - name: Cache lein dependencies
      uses: actions/cache@v2
      env:
        cache-name: lein-dependencies
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('project.clj') }}
        restore-keys: ${{ runner.os }}-${{ env.cache-name }}

    - name: Copy secrets file
      run: cp config/ci.edn config/secrets.edn

    - name: Install dependencies
      run: lein deps

    - name: Run migrations
      run: lein migrations migrate

    - name: Run tests
      run: lein cloverage

    - uses: actions/upload-artifact@v2
      with:
        name: coverage__${{ github.sha }}
        path: target/coverage