name: Deploy to Heroku staging server

on:
  push:
    branches: [ main, setup-ci ]

env:
  build_name: winter-onboarding-2021
  app_name: winter-onboarding-staging

jobs:
  deps:
    name: Install dependencies
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Cache lein dependencies
      uses: actions/cache@v2
      env:
        cache-name: lein-dependencies
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('project.clj') }}
        restore-keys: ${{ runner.os }}-${{ env.cache-name }}

    - name: Install Dependencies
      run: lein deps

  test:
    name: Run tests
    runs-on: ubuntu-latest
    needs: deps
    env:
      ENV: test
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: fleet_management_test
    services:
      postgres:
        env:
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
        image: postgres:14.1
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v2

    - name: Cache lein dependencies
      uses: actions/cache@v2
      env:
        cache-name: lein-dependencies
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('project.clj') }}
        restore-keys: ${{ runner.os }}-${{ env.cache-name }}

    - name: Copy secrets file
      run: cp config/ci.edn config/secrets.edn

    - name: Install dependencies
      run: lein deps

    - name: Run migrations
      run: lein migrations migrate

    - name: Run tests
      run: lein cloverage

    - uses: actions/upload-artifact@v2
      with:
        name: coverage__${{ github.sha }}
        path: target/coverage

  build:
    name: Build Uberjar
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v2

    - name: Cache lein dependencies
      uses: actions/cache@v2
      env:
        cache-name: lein-dependencies
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('project.clj') }}
        restore-keys: ${{ runner.os }}-${{ env.cache-name }}

    - name: Install dependencies
      run: lein deps

    - name: Build uberjar
      run: lein uberjar

    - uses: actions/upload-artifact@v2
      with:
        name: ${{ env.build_name }}
        path: target/winter-onboarding-2021-*-standalone.jar

  deploy_staging:
    name: Deploy to staging
    environment: Staging
    env:
      HEROKU_EMAIL: ${{ secrets.HEROKU_EMAIL }}
      HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Download build
      uses: actions/download-artifact@v2
      with:
        name: ${{ env.build_name }}

    - name: Install heroku java plugin
      run: heroku plugins:install java

    - name: Deploy build to staging
      run: heroku deploy:jar ${{ env.build_name }}-*-standalone.jar --app ${{ env.app_name }}

  health_check:
    name: Health Check
    environment: Staging
    runs-on: ubuntu-latest
    needs: deploy_staging

    steps:
    - name: Check the deployed service URL
      uses: jtalk/url-health-check-action@v2
      env:
        endpoint: ${{ secrets.ENDPOINT }}
      with:
        url: ${{ env.endpoint }}/healthcheck
        max-attempts: 30
        retry-delay: 10s