name: Clojure CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    name: Lint Code Base
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Lint Code Base
        uses: DeLaGuardo/clojure-lint-action@master
        with:
          clj-kondo-args: --lint src
          check-name: Linting errors and warnings
          github_token: ${{ secrets.GITHUB_TOKEN }}

  cljfmt:
    name: Check codebase formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: bltavares/actions/cljfmt@1.0.8
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: autofix src test extra-src-path

  deps:
    name: Install dependencies
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Cache lein dependencies
      uses: actions/cache@v2
      env:
        cache-name: lein-dependencies
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('project.clj') }}
        restore-keys: ${{ runner.os }}-${{ env.cache-name }}

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: deps
    steps:
    - uses: actions/checkout@v2

    - name: Cache lein dependencies
      uses: actions/cache@v2
      env:
        cache-name: lein-dependencies
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('project.clj') }}
        restore-keys: ${{ runner.os }}-${{ env.cache-name }}

    - name: Install dependencies
      run: lein deps

    - name: Run tests
      run: lein test

  build:
    name: Build Uberjar
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v2

    - name: Cache lein dependencies
      uses: actions/cache@v2
      env:
        cache-name: lein-dependencies
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('project.clj') }}
        restore-keys: ${{ runner.os }}-${{ env.cache-name }}

    - name: Install dependencies
      run: lein deps

    - name: Build uberjar
      run: lein uberjar

    - uses: actions/upload-artifact@v2
      with:
        name: winter-onboarding-2021
        path: target/winter-onboarding-2021-*-standalone.jar